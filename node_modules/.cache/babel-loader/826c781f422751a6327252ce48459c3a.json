{"ast":null,"code":"var _jsxFileName = \"D:\\\\web_dev\\\\board_games\\\\bored-games\\\\src\\\\trivia-quiz\\\\Container\\\\Container.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./Container.module.css\";\nimport { questions } from \"../questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Container() {\n  _s();\n\n  const [questionCount, setQuestionCount] = useState(0);\n  const [score, setScore] = useState(0);\n  const [scoreCard, setScoreCard] = useState(false);\n\n  function handleClick(isCorrect) {\n    if (isCorrect) {\n      setScore(score => score + 1);\n    }\n\n    const next = questionCount + 1;\n\n    if (next < questions.length) {\n      setQuestionCount(next);\n    } else {\n      setScoreCard(true);\n    }\n\n    console.log(isCorrect);\n  }\n\n  function playAgain() {\n    setQuestionCount(0);\n    setScore(0);\n    setScoreCard(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.root,\n      children: scoreCard ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.scoreCard,\n        children: [\"You got \", score, \" out of \", questions.length, \" questions correct.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Question: \", questionCount + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.question_text,\n          children: questions[questionCount].questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.answers,\n          children: questions[questionCount].answerOptions.map((options, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.options,\n            onClick: () => handleClick(options.isCorrect),\n            children: options.answerText\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.playAgainDiv,\n      children: scoreCard && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.playAgain,\n        onClick: playAgain,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Container, \"ueX/+xPBWrM0NYMR//jxXhpIEWI=\");\n\n_c = Container;\nexport default Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["React","useState","styles","questions","Container","questionCount","setQuestionCount","score","setScore","scoreCard","setScoreCard","handleClick","isCorrect","next","length","console","log","playAgain","root","question_text","questionText","answers","answerOptions","map","options","index","answerText","playAgainDiv"],"sources":["D:/web_dev/board_games/bored-games/src/trivia-quiz/Container/Container.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./Container.module.css\";\r\n\r\nimport { questions } from \"../questions\";\r\n\r\nfunction Container() {\r\n  const [questionCount, setQuestionCount] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [scoreCard, setScoreCard] = useState(false);\r\n\r\n  function handleClick(isCorrect) {\r\n    if (isCorrect) {\r\n      setScore((score) => score + 1);\r\n    }\r\n    const next = questionCount + 1;\r\n    if (next < questions.length) {\r\n      setQuestionCount(next);\r\n    } else {\r\n      setScoreCard(true);\r\n    }\r\n    console.log(isCorrect);\r\n  }\r\n  function playAgain() {\r\n    setQuestionCount(0);\r\n    setScore(0);\r\n    setScoreCard(false);\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className={styles.root}>\r\n        {scoreCard ? (\r\n          <div className={styles.scoreCard}>\r\n            You got {score} out of {questions.length} questions correct.\r\n          </div>\r\n        ) : (\r\n          <div className={styles.questions}>\r\n            <h2>Question: {questionCount + 1}</h2>\r\n            <h2 className={styles.question_text}>\r\n              {questions[questionCount].questionText}\r\n            </h2>\r\n            <div className={styles.answers}>\r\n              {questions[questionCount].answerOptions.map((options, index) => (\r\n                <button\r\n                  className={styles.options}\r\n                  key={index}\r\n                  onClick={() => handleClick(options.isCorrect)}\r\n                >\r\n                  {options.answerText}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={styles.playAgainDiv}>\r\n        {scoreCard && (\r\n          <button className={styles.playAgain} onClick={playAgain}>\r\n            Play Again\r\n          </button>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,SAASC,SAAT,QAA0B,cAA1B;;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EACnB,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,CAAD,CAAlD;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;;EAEA,SAASU,WAAT,CAAqBC,SAArB,EAAgC;IAC9B,IAAIA,SAAJ,EAAe;MACbJ,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;IACD;;IACD,MAAMM,IAAI,GAAGR,aAAa,GAAG,CAA7B;;IACA,IAAIQ,IAAI,GAAGV,SAAS,CAACW,MAArB,EAA6B;MAC3BR,gBAAgB,CAACO,IAAD,CAAhB;IACD,CAFD,MAEO;MACLH,YAAY,CAAC,IAAD,CAAZ;IACD;;IACDK,OAAO,CAACC,GAAR,CAAYJ,SAAZ;EACD;;EACD,SAASK,SAAT,GAAqB;IACnBX,gBAAgB,CAAC,CAAD,CAAhB;IACAE,QAAQ,CAAC,CAAD,CAAR;IACAE,YAAY,CAAC,KAAD,CAAZ;EACD;;EACD,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE;MAAK,SAAS,EAAER,MAAM,CAACgB,IAAvB;MAAA,UACGT,SAAS,gBACR;QAAK,SAAS,EAAEP,MAAM,CAACO,SAAvB;QAAA,uBACWF,KADX,cAC0BJ,SAAS,CAACW,MADpC;MAAA;QAAA;QAAA;QAAA;MAAA,QADQ,gBAKR;QAAK,SAAS,EAAEZ,MAAM,CAACC,SAAvB;QAAA,wBACE;UAAA,yBAAeE,aAAa,GAAG,CAA/B;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAI,SAAS,EAAEH,MAAM,CAACiB,aAAtB;UAAA,UACGhB,SAAS,CAACE,aAAD,CAAT,CAAyBe;QAD5B;UAAA;UAAA;UAAA;QAAA,QAFF,eAKE;UAAK,SAAS,EAAElB,MAAM,CAACmB,OAAvB;UAAA,UACGlB,SAAS,CAACE,aAAD,CAAT,CAAyBiB,aAAzB,CAAuCC,GAAvC,CAA2C,CAACC,OAAD,EAAUC,KAAV,kBAC1C;YACE,SAAS,EAAEvB,MAAM,CAACsB,OADpB;YAGE,OAAO,EAAE,MAAMb,WAAW,CAACa,OAAO,CAACZ,SAAT,CAH5B;YAAA,UAKGY,OAAO,CAACE;UALX,GAEOD,KAFP;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA;IANJ;MAAA;MAAA;MAAA;IAAA,QADF,eA0BE;MAAK,SAAS,EAAEvB,MAAM,CAACyB,YAAvB;MAAA,UACGlB,SAAS,iBACR;QAAQ,SAAS,EAAEP,MAAM,CAACe,SAA1B;QAAqC,OAAO,EAAEA,SAA9C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA,QA1BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoCD;;GA1DQb,S;;KAAAA,S;AA4DT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}